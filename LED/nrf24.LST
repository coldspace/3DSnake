C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE NRF24
OBJECT MODULE PLACED IN nrf24.OBJ
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE nrf24.c COMPACT BROWSE INCDIR(..\nrf_rx) DEBUG OBJECTEXTEND PREPRINT

line level    source

   1          //#include <REG52.H>
   2          #include <STC12C5A60S2.H>
   3          #include <intrins.h>
   4          # include <stdlib.h>
   5          #include "nrf.h"
   6          //# include "corrupt_snack.h"
   7          //# include "LED_guanglifang.h"
   8          
   9          #define uchar unsigned char
  10          #define uint unsigned int
  11          
  12          uchar display[8][8];
  13          uchar Textpackage[5] = {0};
  14          uchar LED_key[2] = {0}; 
  15          int snack_long;         //定义蛇身的长度
  16          int number = 1,food_ture = 1;
  17          int snack_die = 0;
  18          unsigned xdata nAsciiDot[] =              // ASCII
  19          {
  20                  0x38,0x44,0x44,0x44,0x44,0x44,0x44,0x38,  // -0-
  21          
  22                  0x30,0x10,0x10,0x10,0x10,0x10,0x10,0x7C,  // -1-
  23          
  24                  0x38,0x44,0x04,0x08,0x10,0x20,0x44,0x7C,  // -2-
  25          
  26                  0x38,0x44,0x04,0x18,0x04,0x04,0x44,0x38,  // -3-
  27          
  28                  0x0C,0x14,0x14,0x24,0x44,0x7C,0x04,0x0C,  // -4-
  29          
  30                  0x3C,0x20,0x20,0x38,0x04,0x04,0x44,0x38,  // -5-
  31          
  32                  0x1C,0x20,0x40,0x78,0x44,0x44,0x44,0x38,  // -6-
  33          
  34                  0x7C,0x44,0x04,0x08,0x08,0x08,0x10,0x10,  // -7-
  35          
  36                  0x38,0x44,0x44,0x38,0x44,0x44,0x44,0x38,  // -8-
  37          
  38                  0x38,0x44,0x44,0x44,0x3C,0x04,0x08,0x70  // -9-
  39          };
  40          
  41          struct Sack                      //定义蛇节的空间坐标
  42          {
  43                  char x;
  44                  char y;
  45                  char z;
  46          };
  47          
  48          struct Food               //储存食物位置 
  49          {
  50                  uchar x;
  51                  uchar y;
  52                  uchar z;
  53          }snack_food;
  54          
  55          static xdata struct Sack snack[512];     //定义最大蛇节为512
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 2   

  56          
  57          void setfood ();
  58          
  59          void delay5us(void)   //误差 -0.026765046296us STC 1T 22.1184Mhz
  60          {
  61   1          unsigned char b;
  62   1          for(b=7;b>0;b--);
  63   1              //for(a=2;a>0;a--);
  64   1      }
  65          
  66          void delay(uint i)
  67          {                                                                                                     
  68   1      
  69   1           while (i--){
  70   2               delay5us();}//12t的mcu 注释这个延时即可
  71   1      }
  72          
  73          void delay_ms(int ms)      //延时 ms
  74          {
  75   1              uint i,n;
  76   1      
  77   1              for (i = 0;i < 24 * ms;i ++)
  78   1                      for (n = 0;n < 110;n ++);
  79   1      }
  80          
  81          /* 光立方驱动函数*/
  82          void clear(char le)                     //将所有的灯 设置为亮或者灭
  83          {
  84   1               uchar i,j;
  85   1               for (j=0;j<8;j++)
  86   1               {
  87   2                         for (i=0;i<8;i++)
  88   2                         display[j][i]=le;
  89   2               }
  90   1      }
  91          
  92          void set(uchar x,uchar y,uchar z)          //设置x，y，z处的灯为亮
  93          {
  94   1              display[x][y] |= 0x01<<z;
  95   1      }
  96          
  97          void clr(uchar x,uchar y,uchar z)          //设置x，y，z处的灯为灭
  98          {
  99   1              display[x][y] &=~(0x01<<z);
 100   1      }
 101          /*end  光立方驱动函数*/
 102          
 103          /*贪吃蛇驱动函数*/
 104          
 105          void set_led(struct Sack Buf)                   //显示蛇节的位置
 106          {
 107   1              set(Buf.x,Buf.y,Buf.z);
 108   1      }
 109          
 110          void clr_led(struct Sack Buf)              //熄灭 蛇节
 111          {
 112   1              clr(Buf.x,Buf.y,Buf.z); 
 113   1      }
 114          
 115          void setfood ()
 116          {
 117   1              int i;
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 3   

 118   1              srand(number);  
 119   1              snack_food.x = (uchar)rand()%8;
 120   1              snack_food.y = (uchar)rand()%8;
 121   1              snack_food.z = (uchar)rand()%8;
 122   1      
 123   1              for (i = 0;i <= snack_long;i ++)
 124   1              {
 125   2                      if ( (snack_food.x == snack[i].x) && (snack_food.y == snack[i].y) && (snack_food.z == snack[i].z) )
 126   2                      {
 127   3                              setfood();
 128   3                      }
 129   2              }
 130   1              
 131   1              set(snack_food.x,snack_food.y,snack_food.z);            
 132   1      }
 133          
 134          void move()        //移动
 135          {
 136   1              int i;
 137   1              static int x = 1,y = 1,z = 1;
 138   1              struct Sack linshi_snack,last_snack;
 139   1      
 140   1              linshi_snack = snack[0];                 //用linshi_snack记录下蛇头的值
 141   1              last_snack = snack[snack_long];
 142   1              
 143   1              //判断是否有按键信息
 144   1              if ( ( (LED_key[0] & 0x8f) != 0x00) || ( (LED_key[1] & 0x02) == 0x02) )
 145   1              {               
 146   2                      for (i = 0;i < 8;i ++)
 147   2                      {
 148   3                              switch(LED_key[0] & (0x01 << i))
 149   3                              {
 150   4                                      case 0x01: 
 151   4                                              if ( ((linshi_snack.y - 1) != snack[1].y) && (linshi_snack.y != (snack[1].y - 7)))
 152   4                                              {
 153   5                                                      linshi_snack.y --;
 154   5                                              }
 155   4                                              else 
 156   4                                              {
 157   5                                                      linshi_snack.y ++;      
 158   5                                              }
 159   4                                              
 160   4                                              if (linshi_snack.y < 0)
 161   4                                              {
 162   5                                                      linshi_snack.y = 7;
 163   5                                                      y = 0;
 164   5                                              }
 165   4      
 166   4                                              if (linshi_snack.y > 7)
 167   4                                              {
 168   5                                                      linshi_snack.y = 0;
 169   5                                                      y = 0;
 170   5                                              }
 171   4                                              break;
 172   4                                      case 0x02: 
 173   4                                              if ( ((linshi_snack.z - 1) != snack[1].z) && (linshi_snack.z != (snack[1].z - 7)))
 174   4                                              {
 175   5                                                      linshi_snack.z --;
 176   5                                              }
 177   4                                              else 
 178   4                                              {
 179   5                                                      linshi_snack.z ++;      
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 4   

 180   5                                              }
 181   4      
 182   4                                              if (linshi_snack.z < 0)
 183   4                                              {
 184   5                                                      linshi_snack.z = 7;
 185   5                                                      z = 0;
 186   5                                              }
 187   4      
 188   4                                              if (linshi_snack.z > 7)
 189   4                                              {
 190   5                                                      linshi_snack.z = 0;
 191   5                                                      z = 0;
 192   5                                              }
 193   4                                              break;
 194   4                                      case 0x04: 
 195   4                                              if ( ((linshi_snack.z + 1) != snack[1].z) && (linshi_snack.z != (snack[1].z + 7)))
 196   4                                              {
 197   5                                                      linshi_snack.z ++;
 198   5                                              }
 199   4                                              else 
 200   4                                              {
 201   5                                                      linshi_snack.z --;      
 202   5                                              }
 203   4                                              
 204   4                                              if (linshi_snack.z > 7)
 205   4                                              {
 206   5                                                      linshi_snack.z = 0;
 207   5                                                      z = 0;
 208   5                                              }
 209   4      
 210   4                                              if (linshi_snack.z < 0)
 211   4                                              {
 212   5                                                      linshi_snack.z = 7;
 213   5                                                      z = 0;
 214   5                                              }
 215   4                                              break;
 216   4                                      case 0x08:
 217   4                                              if ( ((linshi_snack.y + 1) != snack[1].y) && (linshi_snack.y != (snack[1].y + 7)))
 218   4                                              {
 219   5                                                      linshi_snack.y ++;
 220   5                                              }
 221   4                                              else 
 222   4                                              {
 223   5                                                      linshi_snack.y --;      
 224   5                                              }
 225   4                                              
 226   4                                              if (linshi_snack.y > 7)
 227   4                                              {
 228   5                                                      linshi_snack.y = 0;
 229   5                                                      y = 0;
 230   5                                              }
 231   4      
 232   4                                              if (linshi_snack.y < 0)
 233   4                                              {
 234   5                                                      linshi_snack.y = 7;
 235   5                                                      y = 0;
 236   5                                              }
 237   4                                              break;
 238   4                                      case 0x10: break;
 239   4                                      case 0x20: break;
 240   4                                      case 0x40: break;
 241   4                                      case 0x80: 
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 5   

 242   4                                              if ( ((linshi_snack.x + 1) != snack[1].x) && (linshi_snack.x != (snack[1].x + 7)))
 243   4                                              {
 244   5                                                      linshi_snack.x ++;
 245   5                                              }
 246   4                                              else 
 247   4                                              {
 248   5                                                      linshi_snack.x --;      
 249   5                                              }
 250   4                                              if (linshi_snack.x > 7)
 251   4                                              {
 252   5                                                      linshi_snack.x = 0;
 253   5                                                      x = 0;
 254   5                                              }
 255   4      
 256   4                                              if (linshi_snack.x < 0)
 257   4                                              {
 258   5                                                      linshi_snack.x = 7;
 259   5                                                      x = 0;
 260   5                                              }
 261   4                                              break;
 262   4                                      default : break;
 263   4                              }
 264   3                      }
 265   2              
 266   2                      if ((LED_key[1]&0x02) == 0x02)
 267   2                      {
 268   3                              if ( ((linshi_snack.x - 1) != snack[1].x) && (linshi_snack.x != (snack[1].x - 7)))
 269   3                              {
 270   4                                      linshi_snack.x --;
 271   4                              }
 272   3                              else 
 273   3                              {
 274   4                                      linshi_snack.x ++;      
 275   4                              }
 276   3                              if (linshi_snack.x < 0)
 277   3                              {
 278   4                                      linshi_snack.x = 7;
 279   4                                      x = 0;
 280   4                              }
 281   3      
 282   3                              if (linshi_snack.x > 7)
 283   3                              {
 284   4                                      linshi_snack.x = 0;
 285   4                                      x = 0;
 286   4                              }
 287   3                      }
 288   2      
 289   2                      if (food_ture)
 290   2                      {
 291   3                              setfood();
 292   3                              food_ture = 0;
 293   3                      }
 294   2                              
 295   2              } 
 296   1              /*判断正在运行的方向*/
 297   1              else 
 298   1              {        
 299   2                      if(snack[0].x != snack[1].x)    //判断移动方向是否在x轴方向
 300   2                      {
 301   3                              if (x)
 302   3                              {
 303   4                                      if(snack[0].x > snack[1].x)     //判断在x轴的正方向和负方向
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 6   

 304   4                                      {
 305   5                                              linshi_snack.x ++;              //贪吃蛇的头向前移动
 306   5                                              if (linshi_snack.x > 7)
 307   5                                              {
 308   6                                                      linshi_snack.x = 0;
 309   6                                                      x = 0;
 310   6                                              }
 311   5                                      }
 312   4                                      else 
 313   4                                      {
 314   5                                              linshi_snack.x --;      
 315   5                                              if (linshi_snack.x < 0)
 316   5                                              {
 317   6                                                      linshi_snack.x = 7;
 318   6                                                      x = 0;
 319   6                                              }
 320   5                                      }
 321   4                              }
 322   3      
 323   3                              else 
 324   3                              {
 325   4                                      if(snack[0].x < snack[1].x)     //判断在x轴的正方向和负方向
 326   4                                      {
 327   5                                              linshi_snack.x ++;              //贪吃蛇的头向前移动
 328   5                                      }
 329   4                                      else 
 330   4                                      {
 331   5                                              linshi_snack.x --;      
 332   5                                      }
 333   4                                      x = 1;  
 334   4                              }
 335   3                      }                                       
 336   2              
 337   2              
 338   2                      if(snack[0].y != snack[1].y)
 339   2                      {
 340   3                              if (y)
 341   3                              {                       
 342   4                                      if(snack[0].y > snack[1].y)     //判断在y轴的正方向和负方向
 343   4                                      {
 344   5                                              linshi_snack.y ++;              //贪吃蛇的头向前移动
 345   5                                              if (linshi_snack.y > 7)
 346   5                                              {
 347   6                                                      linshi_snack.y = 0;
 348   6                                                      y = 0;
 349   6                                              }
 350   5                                      }
 351   4                                      else 
 352   4                                      {
 353   5                                              linshi_snack.y --;
 354   5                                              if (linshi_snack.y < 0)
 355   5                                              {
 356   6                                                      linshi_snack.y = 7;
 357   6                                                      y = 0;
 358   6                                              }       
 359   5                                      }
 360   4                              }
 361   3                              else 
 362   3                              {
 363   4                                      if(snack[0].y < snack[1].y)     //判断在y轴的正方向和负方向
 364   4                                      {
 365   5                                              linshi_snack.y ++;              //贪吃蛇的头向前移动
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 7   

 366   5                                      }
 367   4                                      else 
 368   4                                      {
 369   5                                              linshi_snack.y --;      
 370   5                                      }
 371   4                                      y = 1;  
 372   4                              }               
 373   3                      }
 374   2              
 375   2                      if(snack[0].z != snack[1].z)
 376   2                      {
 377   3                              if (z)
 378   3                              {                       
 379   4                                      if(snack[0].z > snack[1].z)     //判断在z轴的正方向和负方向
 380   4                                      {
 381   5                                              linshi_snack.z ++;              //贪吃蛇的头向前移动
 382   5                                              if (linshi_snack.z > 7)
 383   5                                              {
 384   6                                                      linshi_snack.z = 0;
 385   6                                                      z = 0;
 386   6                                              }
 387   5                                      }
 388   4                                      else 
 389   4                                      {
 390   5                                              linshi_snack.z --;
 391   5                                              if (linshi_snack.z < 0)
 392   5                                              {
 393   6                                                      linshi_snack.z = 7;
 394   6                                                      z = 0;
 395   6                                              }       
 396   5                                      }
 397   4                              }
 398   3                              else 
 399   3                              {
 400   4                                      if(snack[0].z < snack[1].z)     //判断在z轴的正方向和负方向
 401   4                                      {
 402   5                                              linshi_snack.z ++;              //贪吃蛇的头向前移动
 403   5                                      }
 404   4                                      else 
 405   4                                      {
 406   5                                              linshi_snack.z --;      
 407   5                                      }
 408   4                                      z = 1;  
 409   4                              }       
 410   3                      }
 411   2              } 
 412   1              clr_led (last_snack);  //由于向前移动一个 所以清除最后一节蛇身
 413   1              if ( (snack_food.x == snack[0].x) && (snack_food.y == snack[0].y) && (snack_food.z == snack[0].z) )
 414   1              {
 415   2                      snack_long ++;
 416   2                      setfood();      
 417   2              }
 418   1                         
 419   1              /*后面的蛇身也依次向前移动一格*/
 420   1              for (i = snack_long;i > 0;i --)
 421   1              {
 422   2                      snack[i] = snack[i - 1];
 423   2              }
 424   1              snack[0] = linshi_snack;        
 425   1              /*判断是否死亡*/
 426   1              for (i = 1;i < snack_long;i ++)
 427   1              {
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 8   

 428   2                      if ( (snack[i].x == snack[0].x) && (snack[i].y == snack[0].y) && (snack[i].z == snack[0].z) )
 429   2                      {
 430   3                              snack_die = 1;
 431   3                      }
 432   2              }
 433   1      
 434   1              for (i = 0;i <= snack_long;i ++)   //显示所有的蛇身
 435   1              {
 436   2                      set_led(snack[i]);
 437   2              } 
 438   1      
 439   1              //set_led (snack[0]);
 440   1      }
 441          
 442          void init_snack()
 443          {
 444   1              uchar i;
 445   1              snack[0].x = 3;
 446   1              snack[0].y = 5;
 447   1              snack[0].z = 3; 
 448   1      
 449   1              snack[1].x = 3;
 450   1              snack[1].y = 4;
 451   1              snack[1].z = 3;
 452   1              
 453   1              snack[2].x = 3;
 454   1              snack[2].y = 3;
 455   1              snack[2].z = 3; 
 456   1              snack_long = 2;
 457   1      
 458   1              clear(0);
 459   1      
 460   1              for (i = 0;i <= snack_long ;i ++)
 461   1              {       
 462   2                      set_led (snack[i]);     
 463   2              }        
 464   1      }
 465          
 466          uchar getkey ()
 467          {
 468   1              int i;
 469   1              i = 0;
 470   1              while (NRF24L01_RXPacket(Textpackage)) 
 471   1              {
 472   2                      if ( ( Textpackage[0] != 0x00) || ( (Textpackage[1] & 0x03) != 0x00 ) )
 473   2                      {
 474   3                              LED_key[0] = Textpackage[0];
 475   3                              LED_key[1] = Textpackage[1];
 476   3                      }
 477   2                      
 478   2                      i ++;
 479   2                      
 480   2                      if (i == 2)
 481   2                              break;          
 482   2              }
 483   1              
 484   1              return 1;       
 485   1      }
 486          
 487          void playgame()
 488          {
 489   1              int i,n,b;
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 9   

 490   1              i = 0;
 491   1      
 492   1      /*      for (b = 0;b < 500;b++)
 493   1                      {       
 494   1                              for (i = 0;i < 12;i++)
 495   1                                      for (n = 0;n < 110;n ++);                               
 496   1                                                                                      
 497   1                              getkey();         //得到按键信息
 498   1                      }*/
 499   1              
 500   1              while (1)
 501   1              {
 502   2                      for (b = 0;b < 200;b++)
 503   2                      {       
 504   3                              for (i = 0;i < 12;i++)
 505   3                                      for (n = 0;n < 110;n ++);                               
 506   3                                                                                      
 507   3                              getkey();         //得到按键信息
 508   3                      }
 509   2                                      
 510   2                      move(); 
 511   2                      if (snack_die)  // 游戏结束
 512   2                              break;
 513   2              }
 514   1      }
 515          
 516          void display_number(int number,int y)
 517          {
 518   1              int i,n;
 519   1              uint temp;
 520   1              for (i = 0;i < 8;i ++)
 521   1              {
 522   2                      temp = nAsciiDot[number * 8 + i];
 523   2                      for (n = 0;n < 8;n ++)
 524   2                      {
 525   3                              if ( ((temp & 0x80) >> 7) & 0x01)
 526   3                                      set (i,n,y);
 527   3                              else 
 528   3                                      clr (i,n,y);
 529   3                              
 530   3                              temp <<= 1;
 531   3                      }
 532   2              }
 533   1      }
 534          
 535          void display_grade()
 536          {
 537   1              int i;
 538   1              uint grade_unit,grade_ten,grade_hundred;
 539   1              
 540   1              grade_hundred = snack_long / 100;
 541   1              grade_ten = (snack_long - grade_hundred*100) / 10;
 542   1              grade_unit = snack_long % 10;
 543   1              
 544   1              if (grade_hundred > 0)
 545   1              {
 546   2                      for (i = 7;i >= 0;i --)
 547   2                      {
 548   3                              display_number(grade_hundred,i);
 549   3                              delay_ms(50);
 550   3                              clear(0);
 551   3                      }
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 10  

 552   2              }
 553   1              
 554   1              if ((grade_hundred > 0) || (grade_ten > 0))
 555   1              {
 556   2                      for (i = 7;i >= 0;i --)
 557   2                      {
 558   3                              display_number(grade_ten,i);
 559   3                              delay_ms(50);
 560   3                              clear(0);
 561   3                      }
 562   2              }
 563   1              
 564   1              for (i = 7;i >= 0;i --)
 565   1              {
 566   2                      display_number(grade_unit,i);
 567   2                      delay_ms(50);
 568   2                      clear(0);
 569   2              }
 570   1      }
 571          void Snack()
 572          {
 573   1              while (1)
 574   1              {
 575   2                      if (snack_die)
 576   2                      {
 577   3                              clear(0);
 578   3                              display_grade();
 579   3                      }
 580   2                      init_snack ();
 581   2                      
 582   2                      if (snack_die)
 583   2                      {
 584   3                              setfood();
 585   3                              snack_die = 0;
 586   3                      }
 587   2                      
 588   2                      playgame();
 589   2              }
 590   1      }
 591          
 592          /*end 贪吃蛇驱动函数*/
 593          
 594          /*nrf测试函数*/
 595          void Text()
 596          {
 597   1              int i;
 598   1              int temp;
 599   1              while (NRF24L01_RXPacket(Textpackage)) 
 600   1              {
 601   2                      for(i = 0;i < 500;i++);
 602   2                      set(1,1,2);
 603   2              }
 604   1              clr (1,1,2); 
 605   1              set (1,1,3);    
 606   1              
 607   1              clr(snack[0].x,snack[0].y,snack[0].z);
 608   1              
 609   1              temp = Textpackage[0];
 610   1                      
 611   1              for (i = 0;i < 8;i ++)
 612   1              {
 613   2                      switch(Textpackage[0] & (0x01 << i))
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 11  

 614   2                      {
 615   3                              case 0x01: snack[0].y --;break;
 616   3                              case 0x02: snack[0].z --;break;
 617   3                              case 0x04: snack[0].z ++;break;
 618   3                              case 0x08: snack[0].y ++;break;
 619   3                              case 0x10: break;
 620   3                              case 0x20: break;
 621   3                              case 0x40: break;
 622   3                              case 0x80: snack[0].x ++;break;
 623   3                              default : break;
 624   3                      }
 625   2              }
 626   1      
 627   1              if ((Textpackage[1]&0x02) == 0x02)
 628   1              {
 629   2                      snack[0].x --;
 630   2              }
 631   1      
 632   1              set(snack[0].x,snack[0].y,snack[0].z);
 633   1      }
 634          /*end nrf测试函数*/
 635          
 636          //外部中断初始化
 637          void INT1_init(void)
 638          {
 639   1              IE=0x82;
 640   1              TCON=0x01;
 641   1              TH0=0xc0;
 642   1              TL0=0;
 643   1              TR0=1;
 644   1              EA = 1;
 645   1      }
 646          
 647          /*From now on,the function below is to display the flash.*/
 648          void main()
 649          {               
 650   1              INT1_init();            //中断初始化
 651   1              init_nrf ();
 652   1              init_snack(); //测试使用  不用需要注释
 653   1              P4SW = 0xff;
 654   1              
 655   1              while (NRF24L01_Check())         //判断24l01能否工作
 656   1              {
 657   2                      init_nrf ();
 658   2                      set(0,0,0);             //找不到无线模块 则0,0,0，的灯亮
 659   2              }
 660   1              clr(0,0,0);             //无线模块可以工作 则 0,0,0，的灯灭
 661   1      //      set(2,3,4);
 662   1              RX_MODE();                      //无线模块初始化设置 24l01 设置为主接受  从发射
 663   1              while (1)
 664   1              {
 665   2                      //Text();       //测试函数 需要配合遥控器
 666   2                      Snack();
 667   2              }
 668   1      
 669   1              while(1);
 670   1      }
 671          
 672          //P0;   //uln2803
 673          //P1;  //573 in
 674          //P2;  //573 le                                                                                           
 675          void print() interrupt 1
C51 COMPILER V9.51   NRF24                                                                 05/02/2016 19:15:46 PAGE 12  

 676          {
 677   1           uchar i;
 678   1           static uchar layer=0;
 679   1           P0=0;
 680   1           for (i=0;i<8;i++)
 681   1           {
 682   2                     P2=1<<i;
 683   2                     delay(3);
 684   2                     P1=display[layer][i];
 685   2                     delay(3);
 686   2           }
 687   1           P0=1<<layer;
 688   1           if (layer<7) 
 689   1                     layer++;
 690   1           else 
 691   1                     layer=0;
 692   1           TH0=0xc0;
 693   1           TL0=0;
 694   1      
 695   1               number++;
 696   1      
 697   1               if (number == 1024)
 698   1               {
 699   2                      number = 1;
 700   2               }
 701   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2975    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   1696    ----
   PDATA SIZE       =     89      45
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
